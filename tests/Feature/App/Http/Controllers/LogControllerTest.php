<?php


namespace App\Http\Controllers;


use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Tests\TestCase;

class LogControllerTest extends TestCase
{
    use WithoutMiddleware, RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * This test is case getLogs success
     */
    public function testGetLogsSuccess(): void
    {
        $this->artisan('db:seed --class=CashFlowSeeder');

        $response = $this->get(route('log.getLogs'), ['Accept' => 'application/json']);

        $response->assertStatus(200);
    }

    /**
     * This test is case getLogs Error
     */
    public function testGetLogsError(): void
    {
        $response = $this->get(route('log.getLogs'), ['Accept' => 'application/json']);

        $response->assertStatus(500);
    }

    /**
     * This case is endpoint get status by date Success
     */
    public function testGetStatusByDateSuccess(): void
    {
        $this->artisan('db:seed --class=CashFlowSeeder');
        $bodyContents = file_get_contents(__DIR__ . '/../../../RequestFiles/bodyListLogsByDate.json');
        $body = json_decode($bodyContents, true);

        $response = $this->post(route('log.getStatusByDate'), $body, ['Accept' => 'application/json']);

        $response->assertStatus(200);
    }

    /**
     * This case is endpoint get status by date error
     */
    public function testGetStatusByDateError(): void
    {
        $bodyContents = file_get_contents(__DIR__ . '/../../../RequestFiles/bodyListLogsByDate.json');
        $body = json_decode($bodyContents, true);

        $response = $this->post(route('log.getStatusByDate'), $body, ['Accept' => 'application/json']);

        $response->assertStatus(500);
    }
}
